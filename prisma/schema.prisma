generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  address   String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Purchase   Purchase[]
  UserTokens UserTokens[]
}

model UserTokens {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  refreshToken String
  family       String   @unique
  browserInfo  String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

model Product {
  id                 String         @id @default(uuid())
  name               String         @unique
  urlName            String         @unique
  picture            String?
  modelUrl           String?
  basePrice          Decimal
  discountPercentage Int            @default(0)
  description        String?
  createdAt          DateTime       @default(now())
  categories         Category[]
  PurchaseItem       PurchaseItem[]
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  products    Product[]
}

model Purchase {
  id     String  @id @default(uuid())
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId String?

  purchaseItems PurchaseItem[]
  totalPrice    Decimal
  createdAt     DateTime       @default(now())
}

model PurchaseItem {
  id         String    @id @default(uuid())
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  amount     Int
  Purchase   Purchase? @relation(fields: [purchaseId], references: [id])
  purchaseId String?
}

enum Role {
  USER
  ADMIN
}
